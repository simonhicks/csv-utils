#!/bin/bash

show_help() {
  echo ""
  echo "USAGE: $(basename $0) [-h] [-s sep] cols"
  echo ""
  echo "  sep  : the field separator used in the input data"
  echo "  cols : a comma separated list of the columns to keep. You can also alias"
  echo "         columns using old-name=new-name, so '$(basename $0) id,film,date=release-date'"
  echo "         would select columns id, film & date, aliasing date -> release-date"
  echo "  h    : show this help text"
  echo ""
}

SEPARATOR=,

while getopts "hs:" opt
do
  case "$opt" in
    s) SEPARATOR="$OPTARG"
      ;;
    h)
      show_help
      exit 0
      ;;
  esac
done
shift $((OPTIND-1))

if [ "$1" == "" ]
then
  >&2 echo "ERROR: No columns selected"
  >&2 show_help
  exit 1
fi

awk -F $SEPARATOR -v cols="$1" '
BEGIN {
  numberOfColumns = split(cols, columns, FS)
  for (i=1; i<=numberOfColumns; i++) {
    n = split(columns[i], parts, "=")
    columnName = parts[1]
    outputIndex[columnName] = i
    if (n == 2) {
      headers[i] = parts[2]
    } else {
      headers[i] = columnName
    }
  }
}
NR==1 {
  for (f=1; f<=NF; f++) {
    if ($f in outputIndex) {
      inputIndex[outputIndex[$f]] = f
    }
  }
  for (i=1; i<=numberOfColumns; i++) {
    if (! (i in inputIndex)) {
      print("ERROR: Invalid column name: " columns[i])
      exit 1
    }
  }
  sep = ""
  for (f=1; f<=numberOfColumns; f++) {
    printf("%c%s", sep, headers[f])
    sep=FS
  }
  print ""
}
NR!=1{
  sep = ""
  for (f=1; f<=numberOfColumns; f++) {
    printf("%c%s", sep, $inputIndex[f])
    sep=FS
  }
  print ""
}
'
